schema_version: 0.2.0
profile: final-single-mdd20a   # active wiring profile

board:
  name: Nucleo-F401RE
  clock_hz: 84000000

motors:
  left:
    driver: cytron_mdd20a
    pwm:
      timer: TIM1
      channel: CH1
      pin: PA8
      frequency_hz: 20000   # target for Cytron MDD20A; current code ~2 kHz
    direction:
      pin: PB4
  right:
    driver: cytron_mdd20a
    pwm:
      timer: TIM1
      channel: CH2
      pin: PA9
      frequency_hz: 20000
    direction:
      pin: PB5

encoders:
  left:
    timer: TIM3
    ch1:
      pin: PA6
    ch2:
      pin: PA7
    counts_per_rev: 2400        # post-gearbox: 600 PPR × 4
    input_type: open_collector
    pullup: external_3v3        # use 4.7–10k to 3.3 V
    max_signal_freq_hz: 30000
    filter_level: 10            # CubeMX ICxFilter value
  right:
    timer: TIM2
    ch1:
      pin: PA0
    ch2:
      pin: PA1
    counts_per_rev: 2400
    input_type: open_collector
    pullup: external_3v3
    max_signal_freq_hz: 30000
    filter_level: 10

uart:
  telemetry:
    instance: USART2
    tx: PA2
    rx: PA3
    baud_bps: 460800

gpio:
  status_led:
    pin: PA5
  user_button:
    pin: PC13

safety:
  estop:
    sense:
      pin: TBD
      active_state: low        # low or high
      pull: pullup_3v3         # pullup_3v3 or pulldown
      debounce_ms: 10
    hw_cut:
      type: series_switch      # series_switch / relay / contactor / high_side
      notes: Cut motor VM supply to driver (preferred primary action)

 sensors:
   proximity:
     quantity: 8
     power_rail: TBD           # 3v3 or 5v
     interface: TBD            # gpio / adc / i2c / uart
     units: distance           # semantic units (e.g., mm) defined per model
     channels:
       - id: S1
         gpio_pin: TBD         # if interface=gpio
         adc_pin:  TBD         # if interface=adc
         i2c_bus: TBD          # if interface=i2c
         i2c_addr: TBD
         uart_port: TBD        # if interface=uart
       - id: S2
         gpio_pin: TBD
         adc_pin:  TBD
         i2c_bus: TBD
         i2c_addr: TBD
         uart_port: TBD
       - id: S3
         gpio_pin: TBD
         adc_pin:  TBD
         i2c_bus: TBD
         i2c_addr: TBD
         uart_port: TBD
       - id: S4
         gpio_pin: TBD
         adc_pin:  TBD
         i2c_bus: TBD
         i2c_addr: TBD
         uart_port: TBD
       - id: S5
         gpio_pin: TBD
         adc_pin:  TBD
         i2c_bus: TBD
         i2c_addr: TBD
         uart_port: TBD
       - id: S6
         gpio_pin: TBD
         adc_pin:  TBD
         i2c_bus: TBD
         i2c_addr: TBD
         uart_port: TBD
       - id: S7
         gpio_pin: TBD
         adc_pin:  TBD
         i2c_bus: TBD
         i2c_addr: TBD
         uart_port: TBD
       - id: S8
         gpio_pin: TBD
         adc_pin:  TBD
         i2c_bus: TBD
         i2c_addr: TBD
         uart_port: TBD

 buses:
   i2c1:
     scl: TBD
     sda: TBD
     pullups: external_3v3
   i2c2:
     scl: TBD
     sda: TBD
     pullups: external_3v3

adc:
  vref_volts: 3.3
  resolution_bits: 12
  dma: enabled                 # ADC1 configured with DMA circular mode
  channels:
    # Motor current sensing (ACS758 → resistor divider → STM32 ADC)
    - id: motor_left_current
      pin: PB0                 # ADC1_IN8 (configured)
      name: I_MOTOR_LEFT
      source: acs758_vout
      divider:                 # scale 0–5 V to ~0–3.3 V (r ≈ 0.6)
        r_top_ohms: 10000      # 10k (Vout from ACS758 to divider top)
        r_bottom_ohms: 15000   # 15k to GND → Vadc = 0.6 × Vsense
        v_in_max_volts: 5.0
        v_out_max_volts: 3.0
      filter:                  # simple post-divider RC for anti-aliasing/noise
        r_series_ohms: 1000
        c_shunt_nf: 100        # fc ≈ 1.6 kHz; adjust per sampling rate
      status: active           # present in ADC regular sequence
    - id: motor_right_current
      pin: PC1                 # ADC1_IN11 (mapped, may be added to sequence)
      name: I_MOTOR_RIGHT
      source: acs758_vout
      divider:
        r_top_ohms: 10000
        r_bottom_ohms: 15000
        v_in_max_volts: 5.0
        v_out_max_volts: 3.0
      filter:
        r_series_ohms: 1000
        c_shunt_nf: 100
      status: active           # now included in ADC regular sequence (Rank 2)

current_sensors:
  model: ACS758                # Allegro Hall-effect current sensor
  quantity: 2                  # Left/Right motor lines
  supply_volts: 5.0            # Ratiometric output; 2.5 V at 0 A (typ.)
  placement: series_with_each_motor_supply
  output_interface: analog_single_ended
  variant: TBD                 # e.g., -050B (±50 A) or -100B (±100 A)
  sensitivity_mV_per_A: TBD    # depends on variant (example: ~40 mV/A @ 50A)
  zero_current_offset_volts: ratiometric_to_vcc_over_2
  wiring_notes:
    - Keep high-current paths short; use appropriate gauge and creepage/clearance.
    - Route sensor Vout to STM32 ADC through the divider; add local 0.1 µF decoupling at sensor Vcc.
    - Tie grounds at a star point; avoid running Vout alongside PWM motor leads.

drivers:
  l298n:
    enable_pin: PA8    # ENA
    in1_pin: PB4
    in2_pin: PB5
  cytron_mdd20a:
    m1_pwm: PA8
    m1_dir: PB4
    m2_pwm: PA9
    m2_dir: PB5

notes:
  - Keep this file authoritative; update when wiring or firmware changes.
  - Align TIM1 ARR/PSC to achieve the desired PWM frequency.
  - Encoder mount is post-gearbox; if remounted pre-gearbox (30:1), set counts_per_rev to 72000.
